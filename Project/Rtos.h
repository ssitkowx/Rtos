#pragma once

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include <string>
#include <stdint.h>

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// MACROS/DEFINITIONS ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#define SET_RTOS_INST(INSTANCE) Rtos <ThreadXHw>::SetInstance (INSTANCE);

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

template <class DERIVED_TYPE>
class Rtos
{
    friend DERIVED_TYPE;
    DERIVED_TYPE & derivedType = static_cast <DERIVED_TYPE &>(*this);

    private:
        static inline DERIVED_TYPE * instance = nullptr;

    public:
        Rtos            ()                           = default;
        Rtos            (const DERIVED_TYPE & vRtos) = delete;
        Rtos & operator=(const DERIVED_TYPE & vRtos) = delete;
        Rtos & operator=(DERIVED_TYPE && vRtos)      = delete;
        virtual ~Rtos   ()                           = default;

        static void           SetInstance (DERIVED_TYPE * const vInstance) { instance = vInstance;        }
        static DERIVED_TYPE * GetInstance (void              )             { return instance;             }

        void                  Init        (void)                           { derivedType.Init      ();    }
        void                  DeInit      (void)                           { derivedType.DeInit    ();    }
        void                  DelayInMs   (const uint32_t vMs)             { derivedType.DelayInMs (vMs); }
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
